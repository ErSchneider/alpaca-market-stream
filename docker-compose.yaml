---
version: '2'
services:
  zookeeper:
    restart: on-failure
    hostname: zookeeper
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka0:
    restart: on-failure
    image: confluentinc/cp-kafka
    ports:
      - '9092:9092'
      - '29094:29094'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: A://kafka0:29092,B://kafka0:9092,C://kafka0:29094
      KAFKA_ADVERTISED_LISTENERS: A://kafka0:29092,B://localhost:9092,C://:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: A:PLAINTEXT,B:SSL,C:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: A
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  spark:
    hostname: spark
    container_name: spark
    build:
      dockerfile: spark/Dockerfile
    ports:
      - 4040:4040

  ingestion:
    hostname: ingestion
    container_name: ingestion
    build:
      dockerfile: ingestion/Dockerfile_ingestion

  influxdb:
    image: influxdb:2.0.8
    container_name: influxdb
    ports:
      - 8086:8086
    volumes:
      - ./influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin123
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=testorg
      - DOCKER_INFLUXDB_INIT_BUCKET=testbucket
      - DOCKER_INFLUXDB_INIT_RETENTION=30d
      - DOCKER_INFLUXDB_AUTH_ENABLED=true
      - DOCKER_INFLUXDB_INIT_TOKEN=testtoken